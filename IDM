from math import *
import matplotlib.pyplot as plt

t = 1.0 #temps d'actualisation
a_max = 1.5
delta = 1.0
dec_confort = 1.5
dec_max = 10.0
v_max = 50.0
d_min = 2.0
temps_reac = 1.0
l = 2.0

def v_etoile(v,delta_v):
    return (d_min + v*temps_reac + v*delta_v/sqrt(2*a_max*dec_confort))

def acc(V,X):
    n = len(V)
    L = []
    for k in range(n):
        if k == 0 :
            acc = a_max*(1.0 - (V[k]/v_max)**delta)
            L.append(acc)
        else :
            acc = a_max*(1.0 - (V[k]/v_max)**delta - (v_etoile(V[k],V[k]-V[k-1])/(X[k]-X[k-1]-l))**2)
            L.append(acc)
    return L

def actualise(X,V,A):
    newX = []
    newV = []
    for k in range(len(V)):
        newV.append(V[k] + t*A[k])
        newX.append(X[k] + t*newV[k])
    return (newX,newV)

liste_position = [[5*k] for k in range(4)]
liste_vitesse = [[0] for k in range(4)]
pos_init = [15,10,5,0]
vit_init = [0,0,0,0]
A = acc(vit_init,pos_init)

for k in range(59):
    X,V = actualise(pos_init,vit_init,A)
    pos_init = X
    vit_init = V
    A = acc(vit_init,pos_init)
    for k in range(4):
        liste_position[k].append(X[k])
        liste_vitesse[k].append(V[k])

T = [k for k in range(60)]
for k in range(4):
    plt.plot(T,liste_vitesse[k])

plt.show()
